{"version":3,"file":"static/js/765.cd6f8127.chunk.js","mappings":"6LAkBA,UAba,WAAO,IAADA,EACTC,GAASC,EAAAA,EAAAA,GAAS,qBAAlBD,KACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAyB,QAAhBL,EAAO,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMK,eAAO,IAAAN,EAAAA,EAAI,GAEnC,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGJ,IAAaE,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,WAAYN,EAAWF,SAAUA,KAGjE,C,0HCbMS,EAAWC,EAAAA,OAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAOpBC,EAAcH,EAAAA,OAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0aAsBxBG,EAAaL,EAAAA,OAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4HAOvBK,EAAWP,EAAAA,OAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qLAEdC,EAIAE,GAKNI,GAAWT,EAAAA,EAAAA,QAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qFAOvBU,EAAYZ,EAAAA,OAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mDAKpBY,EAAkBd,EAAAA,OAAAA,EAAQe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,Q,iBC/CnBL,EAAa,SAAHmB,GAAkC,IAA5BlB,EAAUkB,EAAVlB,WAAYR,EAAQ0B,EAAR1B,SACvC,OACEI,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CAAArB,UACRF,EAAAA,EAAAA,KAACK,EAAQ,CAAAH,SACNE,EAAWoB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAWJ,EAAXI,YAAaC,EAAQL,EAARK,SAAQ,OACvD9B,EAAAA,EAAAA,KAACa,EAAQ,CAAAX,UACP6B,EAAAA,EAAAA,MAAChB,EAAQ,CAACiB,GAAE,WAAAC,OAAaP,GAAMQ,MAAO,CAAEC,KAAMvC,GAAWM,SAAA,EACvDF,EAAAA,EAAAA,KAACW,EAAU,CACTyB,IACEP,EAAW,mCAAAI,OAC4BJ,GACnCQ,EAENC,IAAU,OAALX,QAAK,IAALA,EAAAA,EAASC,KAEhBG,EAAAA,EAAAA,MAACtB,EAAW,CAAAP,SAAA,EACVF,EAAAA,EAAAA,KAACkB,EAAS,CAAAhB,SAAO,OAALyB,QAAK,IAALA,EAAAA,EAASC,KACrB5B,EAAAA,EAAAA,KAACoB,EAAe,CAAAlB,UAAEqC,EAAAA,EAAAA,GAAa,IAAKT,YAZ3BJ,EAeJ,OAKrB,C","sources":["Pages/Home/Home.jsx","components/MovieCards/MovieCard.styled.jsx","components/MovieCards/MovieCards.jsx"],"sourcesContent":["import { MovieCards } from 'components/MovieCards/MovieCards';\nimport { useFetch } from 'hooks/useFetch';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const { data } = useFetch('/trending/all/day');\n  const location = useLocation();\n\n  const moviesArr = data?.results ?? [];\n\n  return (\n    <>\n      {moviesArr && <MovieCards moviesData={moviesArr} location={location} />}\n    </>\n  );\n};\n\nexport default Home;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst CardList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nconst CardContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  gap: 10px;\n  padding: 10px;\n  color: #e8e8e8;\n  line-height: 1.5;\n  border-radius: 5px;\n  opacity: 0;\n  pointer-events: none;\n  transform: translateY(50px);\n  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);\n`;\n\nconst CardPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: filter 0.6s cubic-bezier(0.23, 1, 0.32, 1);\n`;\n\nconst CardItem = styled.li`\n  flex-basis: calc((100% - 45px) / 4);\n  &:hover ${CardContent} {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  &:hover ${CardPoster} {\n    filter: blur(5px) brightness(50%);\n  }\n`;\n\nconst CardLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nconst CardTitle = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nconst CardDescription = styled.p``;\n\nexport {\n  CardList,\n  CardItem,\n  CardPoster,\n  CardContent,\n  CardTitle,\n  CardDescription,\n  CardLink,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport noImage from '../../assets/image-not-found.jpg';\nimport { Container } from 'components/Container/Container';\nimport {\n  CardContent,\n  CardDescription,\n  CardItem,\n  CardLink,\n  CardList,\n  CardPoster,\n  CardTitle,\n} from './MovieCard.styled';\nimport { truncateText } from 'helpers/helpers';\n\nexport const MovieCards = ({ moviesData, location }) => {\n  return (\n    <Container>\n      <CardList>\n        {moviesData.map(({ id, title, name, poster_path, overview }) => (\n          <CardItem key={id}>\n            <CardLink to={`/movies/${id}`} state={{ form: location }}>\n              <CardPoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n                    : noImage\n                }\n                alt={title ?? name}\n              />\n              <CardContent>\n                <CardTitle>{title ?? name}</CardTitle>\n                <CardDescription>{truncateText(150, overview)}</CardDescription>\n              </CardContent>\n            </CardLink>\n          </CardItem>\n        ))}\n      </CardList>\n    </Container>\n  );\n};\n\nMovieCards.propTypes = {\n  moviesData: PropTypes.arrayOf(\n    PropTypes.shape({\n      adult: PropTypes.bool,\n      backdrop_path: PropTypes.string,\n      genre_ids: PropTypes.array,\n      id: PropTypes.number,\n      media_type: PropTypes.string,\n      original_language: PropTypes.string,\n      original_title: PropTypes.string,\n      overview: PropTypes.string,\n      popularity: PropTypes.number,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      title: PropTypes.string,\n      video: PropTypes.bool,\n      vote_average: PropTypes.number,\n      vote_count: PropTypes.number,\n    }).isRequired\n  ),\n  location: PropTypes.object.isRequired,\n};\n"],"names":["_data$results","data","useFetch","location","useLocation","moviesArr","results","_jsx","_Fragment","children","MovieCards","moviesData","CardList","styled","_templateObject","_taggedTemplateLiteral","CardContent","_templateObject2","CardPoster","_templateObject3","CardItem","_templateObject4","CardLink","Link","_templateObject5","CardTitle","_templateObject6","CardDescription","_templateObject7","_ref","Container","map","_ref2","id","title","name","poster_path","overview","_jsxs","to","concat","state","form","src","noImage","alt","truncateText"],"sourceRoot":""}